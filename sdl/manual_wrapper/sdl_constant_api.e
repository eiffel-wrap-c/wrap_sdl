note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- Macro wrapper
class SDL_CONSTANT_API


feature -- Access


-- The constant sdl_init_timer-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_audio-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_video-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_joystick-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_haptic-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h
	SDL_INIT_TIMER: INTEGER = 0x00000001

	SDL_INIT_AUDIO: INTEGER = 0x00000010

	SDL_INIT_VIDEO: INTEGER = 0x00000020
			-- SDL_INIT_VIDEO implies SDL_INIT_EVENTS

	SDL_INIT_JOYSTICK: INTEGER = 0x00000200
			-- SDL_INIT_JOYSTICK implies SDL_INIT_EVENTS

	SDL_INIT_HAPTIC: INTEGER = 0x00001000


	SDL_QUIT: INTEGER = 0x100

-- The constant sdl_init_gamecontroller-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_events-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_sensor-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_noparachute-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h


-- The constant sdl_init_everything-- needs to be wrapped by hand
-- Check the definition at -- C:\\home\\test\\wrap_sdl2\\library/C/include/SDL2/SDL.h

	sdl_false: INTEGER_64 = 0

	sdl_true: INTEGER_64 = 1


	SDL_KEYDOWN: INTEGER = 0x300
	SDL_KEYUP: INTEGER = 0x301

	SDL_MOUSEMOTION: INTEGER = 0x400
	SDL_MOUSEBUTTONDOWN: INTEGER = 0x401
	SDL_MOUSEBUTTONUP: INTEGER = 0x302
	SDL_MOUSEWHEEL: INTEGER = 0x303


-- The constant sdl_max_sint8-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_sint8-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_uint8-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_uint8-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_sint16-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_sint16-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_uint16-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_uint16-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_sint32-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_sint32-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_uint32-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_uint32-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_sint64-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_sint64-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_max_uint64-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_min_uint64-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h

	sdl_pris64: STRING = "I64d"

	sdl_priu64: STRING = "I64u"

	sdl_prix64: STRING = "I64x"

	--sdl_prix64: STRING = "I64X"


-- The constant sdl_iconv_error-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_iconv_e2big-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_iconv_eilseq-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h


-- The constant sdl_iconv_einval-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_stdinc.h

	sdl_audio_driver_disk: INTEGER_64 = 1

	sdl_audio_driver_dsound: INTEGER_64 = 1

	sdl_audio_driver_dummy: INTEGER_64 = 1

	sdl_audio_driver_wasapi: INTEGER_64 = 1

	sdl_audio_driver_winmm: INTEGER_64 = 1

	sdl_joystick_dinput: INTEGER_64 = 1

	sdl_joystick_xinput: INTEGER_64 = 1

	sdl_joystick_hidapi: INTEGER_64 = 1

	sdl_haptic_dinput: INTEGER_64 = 1

	sdl_haptic_xinput: INTEGER_64 = 1

	sdl_sensor_dummy: INTEGER_64 = 1

	sdl_loadso_windows: INTEGER_64 = 1

	sdl_thread_windows: INTEGER_64 = 1

	sdl_timer_windows: INTEGER_64 = 1

	sdl_video_driver_dummy: INTEGER_64 = 1

	sdl_video_driver_windows: INTEGER_64 = 1

	sdl_video_render_d3d: INTEGER_64 = 1

	sdl_video_render_d3d11: INTEGER_64 = 1

	sdl_video_render_ogl: INTEGER_64 = 1

	sdl_video_render_ogl_es2: INTEGER_64 = 1

	sdl_video_opengl: INTEGER_64 = 1

	sdl_video_opengl_es2: INTEGER_64 = 1

	sdl_video_opengl_wgl: INTEGER_64 = 1

	sdl_video_opengl_egl: INTEGER_64 = 1

	sdl_power_windows: INTEGER_64 = 1

	sdl_filesystem_windows: INTEGER_64 = 1

	sdl_assembly_routines: INTEGER_64 = 1

	sdl_assert_level: INTEGER_64 = 2


-- The constant sdl_null_while_loop_condition-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_assert.h


-- The constant sdl_audio_mask_bitsize-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_audio.h


-- The constant sdl_audio_mask_datatype-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_audio.h


-- The constant sdl_audio_mask_endian-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_audio.h


-- The constant sdl_audio_mask_signed-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_audio.h

	sdl_audio_allow_frequency_change: INTEGER = 0x00000001

	sdl_audio_allow_format_change: INTEGER = 0x00000002

	sdl_audio_allow_channels_change: INTEGER = 0x00000004

	sdl_audio_allow_samples_change: INTEGER = 0x00000008


-- The constant sdl_audio_allow_any_change-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_audio.h

	sdl_audiocvt_max_filters: INTEGER_64 = 9

	sdl_mix_maxvolume: INTEGER_64 = 128

	sdl_lil_endian: INTEGER_64 = 1234

	sdl_big_endian: INTEGER_64 = 4321

	sdl_mutex_timedout: INTEGER_64 = 1


-- The constant sdl_mutex_maxwait-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_mutex.h


-- The constant sdl_rwops_unknown-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_rwops.h


-- The constant sdl_rwops_winfile-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_rwops.h


-- The constant sdl_rwops_stdfile-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_rwops.h


-- The constant sdl_rwops_jnifile-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_rwops.h


-- The constant sdl_rwops_memory-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_rwops.h


-- The constant sdl_rwops_memory_ro-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_rwops.h

	sdl_cacheline_size: INTEGER_64 = 128

	sdl_released: INTEGER_64 = 0

	sdl_pressed: INTEGER_64 = 1

	sdl_texteditingevent_text_size: INTEGER_64
		external
			"C inline use <SDL.h>"
		alias
			"SDL_TEXTEDITINGEVENT_TEXT_SIZE"
		end

	sdl_textinputevent_text_size: INTEGER_64
		external
			"C inline use <SDL.h>"
		alias
			"SDL_TEXTINPUTEVENT_TEXT_SIZE"
		end

	sdl_ignore: INTEGER_64 = 0

	sdl_disable: INTEGER_64 = 0

	sdl_enable: INTEGER_64 = 1



-- The constant sdl_windowpos_undefined_mask-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_video.h


-- The constant sdl_windowpos_centered_mask-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_video.h

	SDL_WINDOWPOS_UNDEFINED_MASK: INTEGER = 0x1FFF0000

	SDL_WINDOWPOS_UNDEFINED: INTEGER
		external
			"C inline use <SDL.h>"
		alias
			"SDL_WINDOWPOS_UNDEFINED"
		end


--  128: #define SDL_WINDOWPOS_UNDEFINED_DISPLAY(X)  (SDL_WINDOWPOS_UNDEFINED_MASK|(X))
--  129: #define SDL_WINDOWPOS_UNDEFINED         SDL_WINDOWPOS_UNDEFINED_DISPLAY(0)
--  130  #define SDL_WINDOWPOS_ISUNDEFINED(X)    \
--  131:             (((X)&0xFFFF0000) == SDL_WINDOWPOS_UNDEFINED_MASK)
--  132

	sdl_alpha_opaque: INTEGER_64 = 255

	sdl_alpha_transparent: INTEGER_64 = 0

	sdl_swsurface: INTEGER_64 = 0

	sdl_prealloc: INTEGER = 0x00000001

	sdl_rleaccel: INTEGER = 0x00000002

	sdl_dontfree: INTEGER = 0x00000004

	sdl_simd_aligned: INTEGER = 0x00000008

	sdl_button_left: INTEGER_64 = 1

	sdl_button_middle: INTEGER_64 = 2

	sdl_button_right: INTEGER_64 = 3

	sdl_button_x1: INTEGER_64 = 4

	sdl_button_x2: INTEGER_64 = 5

	sdl_joystick_axis_max: INTEGER_64 = 32767

	sdl_hat_centered: INTEGER = 0x00

	sdl_hat_up: INTEGER = 0x01

	sdl_hat_right: INTEGER = 0x02

	sdl_hat_down: INTEGER = 0x04

	sdl_hat_left: INTEGER = 0x08


-- The constant sdl_hat_rightup-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_joystick.h


-- The constant sdl_hat_rightdown-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_joystick.h


-- The constant sdl_hat_leftup-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_joystick.h


-- The constant sdl_hat_leftdown-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_joystick.h


-- The constant sdl_touch_mouseid-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_touch.h


-- The constant sdl_mouse_touchid-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_touch.h


-- The constant sdl_haptic_constant-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_sine-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_leftright-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_triangle-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_sawtoothup-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_sawtoothdown-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_ramp-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_spring-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_damper-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_inertia-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_friction-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_custom-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_gain-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_autocenter-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_status-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h


-- The constant sdl_haptic_pause-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h

	sdl_haptic_polar: INTEGER_64 = 0

	sdl_haptic_cartesian: INTEGER_64 = 1

	sdl_haptic_spherical: INTEGER_64 = 2


-- The constant sdl_haptic_infinity-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_haptic.h

	sdl_hint_framebuffer_acceleration: STRING = "SDL_FRAMEBUFFER_ACCELERATION"

	sdl_hint_render_driver: STRING = "SDL_RENDER_DRIVER"

	sdl_hint_render_opengl_shaders: STRING = "SDL_RENDER_OPENGL_SHADERS"

	sdl_hint_render_direct3d_threadsafe: STRING = "SDL_RENDER_DIRECT3D_THREADSAFE"

	sdl_hint_render_direct3d11_debug: STRING = "SDL_RENDER_DIRECT3D11_DEBUG"

	sdl_hint_render_logical_size_mode: STRING = "SDL_RENDER_LOGICAL_SIZE_MODE"

	sdl_hint_render_scale_quality: STRING = "SDL_RENDER_SCALE_QUALITY"

	sdl_hint_render_vsync: STRING = "SDL_RENDER_VSYNC"

	sdl_hint_video_allow_screensaver: STRING = "SDL_VIDEO_ALLOW_SCREENSAVER"

	sdl_hint_video_external_context: STRING = "SDL_VIDEO_EXTERNAL_CONTEXT"

	sdl_hint_video_x11_xvidmode: STRING = "SDL_VIDEO_X11_XVIDMODE"

	sdl_hint_video_x11_xinerama: STRING = "SDL_VIDEO_X11_XINERAMA"

	sdl_hint_video_x11_xrandr: STRING = "SDL_VIDEO_X11_XRANDR"

	sdl_hint_video_x11_window_visualid: STRING = "SDL_VIDEO_X11_WINDOW_VISUALID"

	sdl_hint_video_x11_net_wm_ping: STRING = "SDL_VIDEO_X11_NET_WM_PING"

	sdl_hint_video_x11_net_wm_bypass_compositor: STRING = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR"

	sdl_hint_video_x11_force_egl: STRING = "SDL_VIDEO_X11_FORCE_EGL"

	sdl_hint_window_frame_usable_while_cursor_hidden: STRING = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN"

	sdl_hint_windows_intresource_icon: STRING = "SDL_WINDOWS_INTRESOURCE_ICON"

	sdl_hint_windows_intresource_icon_small: STRING = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL"

	sdl_hint_windows_enable_messageloop: STRING = "SDL_WINDOWS_ENABLE_MESSAGELOOP"

	sdl_hint_grab_keyboard: STRING = "SDL_GRAB_KEYBOARD"

	sdl_hint_mouse_double_click_time: STRING = "SDL_MOUSE_DOUBLE_CLICK_TIME"

	sdl_hint_mouse_double_click_radius: STRING = "SDL_MOUSE_DOUBLE_CLICK_RADIUS"

	sdl_hint_mouse_normal_speed_scale: STRING = "SDL_MOUSE_NORMAL_SPEED_SCALE"

	sdl_hint_mouse_relative_speed_scale: STRING = "SDL_MOUSE_RELATIVE_SPEED_SCALE"

	sdl_hint_mouse_relative_mode_warp: STRING = "SDL_MOUSE_RELATIVE_MODE_WARP"

	sdl_hint_mouse_focus_clickthrough: STRING = "SDL_MOUSE_FOCUS_CLICKTHROUGH"

	sdl_hint_touch_mouse_events: STRING = "SDL_TOUCH_MOUSE_EVENTS"

	sdl_hint_mouse_touch_events: STRING = "SDL_MOUSE_TOUCH_EVENTS"

	sdl_hint_video_minimize_on_focus_loss: STRING = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS"

	sdl_hint_idle_timer_disabled: STRING = "SDL_IOS_IDLE_TIMER_DISABLED"

	sdl_hint_orientations: STRING = "SDL_IOS_ORIENTATIONS"

	sdl_hint_apple_tv_controller_ui_events: STRING = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS"

	sdl_hint_apple_tv_remote_allow_rotation: STRING = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION"

	sdl_hint_ios_hide_home_indicator: STRING = "SDL_IOS_HIDE_HOME_INDICATOR"

	sdl_hint_accelerometer_as_joystick: STRING = "SDL_ACCELEROMETER_AS_JOYSTICK"

	sdl_hint_tv_remote_as_joystick: STRING = "SDL_TV_REMOTE_AS_JOYSTICK"

	sdl_hint_xinput_enabled: STRING = "SDL_XINPUT_ENABLED"

	sdl_hint_xinput_use_old_joystick_mapping: STRING = "SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING"

	sdl_hint_gamecontrollertype: STRING = "SDL_GAMECONTROLLERTYPE"

	sdl_hint_gamecontrollerconfig: STRING = "SDL_GAMECONTROLLERCONFIG"

	sdl_hint_gamecontrollerconfig_file: STRING = "SDL_GAMECONTROLLERCONFIG_FILE"

	sdl_hint_gamecontroller_ignore_devices: STRING = "SDL_GAMECONTROLLER_IGNORE_DEVICES"

	sdl_hint_gamecontroller_ignore_devices_except: STRING = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT"

	sdl_hint_gamecontroller_use_button_labels: STRING = "SDL_GAMECONTROLLER_USE_BUTTON_LABELS"

	sdl_hint_joystick_allow_background_events: STRING = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS"

	sdl_hint_joystick_hidapi: STRING = "SDL_JOYSTICK_HIDAPI"

	sdl_hint_joystick_hidapi_ps4: STRING = "SDL_JOYSTICK_HIDAPI_PS4"

	sdl_hint_joystick_hidapi_ps4_rumble: STRING = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE"

	sdl_hint_joystick_hidapi_steam: STRING = "SDL_JOYSTICK_HIDAPI_STEAM"

	sdl_hint_joystick_hidapi_switch: STRING = "SDL_JOYSTICK_HIDAPI_SWITCH"

	sdl_hint_joystick_hidapi_xbox: STRING = "SDL_JOYSTICK_HIDAPI_XBOX"

	sdl_hint_joystick_hidapi_gamecube: STRING = "SDL_JOYSTICK_HIDAPI_GAMECUBE"

	sdl_hint_enable_steam_controllers: STRING = "SDL_ENABLE_STEAM_CONTROLLERS"

	sdl_hint_allow_topmost: STRING = "SDL_ALLOW_TOPMOST"

	sdl_hint_timer_resolution: STRING = "SDL_TIMER_RESOLUTION"

	sdl_hint_qtwayland_content_orientation: STRING = "SDL_QTWAYLAND_CONTENT_ORIENTATION"

	sdl_hint_qtwayland_window_flags: STRING = "SDL_QTWAYLAND_WINDOW_FLAGS"

	sdl_hint_thread_stack_size: STRING = "SDL_THREAD_STACK_SIZE"

	sdl_hint_video_highdpi_disabled: STRING = "SDL_VIDEO_HIGHDPI_DISABLED"

	sdl_hint_mac_ctrl_click_emulate_right_click: STRING = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK"

	sdl_hint_video_win_d3dcompiler: STRING = "SDL_VIDEO_WIN_D3DCOMPILER"

	sdl_hint_video_window_share_pixel_format: STRING = "SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT"

	sdl_hint_winrt_privacy_policy_url: STRING = "SDL_WINRT_PRIVACY_POLICY_URL"

	sdl_hint_winrt_privacy_policy_label: STRING = "SDL_WINRT_PRIVACY_POLICY_LABEL"

	sdl_hint_winrt_handle_back_button: STRING = "SDL_WINRT_HANDLE_BACK_BUTTON"

	sdl_hint_video_mac_fullscreen_spaces: STRING = "SDL_VIDEO_MAC_FULLSCREEN_SPACES"

	sdl_hint_mac_background_app: STRING = "SDL_MAC_BACKGROUND_APP"

	sdl_hint_android_apk_expansion_main_file_version: STRING = "SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION"

	sdl_hint_android_apk_expansion_patch_file_version: STRING = "SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION"

	sdl_hint_ime_internal_editing: STRING = "SDL_IME_INTERNAL_EDITING"

	sdl_hint_android_trap_back_button: STRING = "SDL_ANDROID_TRAP_BACK_BUTTON"

	sdl_hint_android_block_on_pause: STRING = "SDL_ANDROID_BLOCK_ON_PAUSE"

	sdl_hint_return_key_hides_ime: STRING = "SDL_RETURN_KEY_HIDES_IME"

	sdl_hint_emscripten_keyboard_element: STRING = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT"

	sdl_hint_no_signal_handlers: STRING = "SDL_NO_SIGNAL_HANDLERS"

	sdl_hint_windows_no_close_on_alt_f4: STRING = "SDL_WINDOWS_NO_CLOSE_ON_ALT_F4"

	sdl_hint_bmp_save_legacy_format: STRING = "SDL_BMP_SAVE_LEGACY_FORMAT"

	sdl_hint_windows_disable_thread_naming: STRING = "SDL_WINDOWS_DISABLE_THREAD_NAMING"

	sdl_hint_rpi_video_layer: STRING = "SDL_RPI_VIDEO_LAYER"

	sdl_hint_video_double_buffer: STRING = "SDL_VIDEO_DOUBLE_BUFFER"

	sdl_hint_opengl_es_driver: STRING = "SDL_OPENGL_ES_DRIVER"

	sdl_hint_audio_resampling_mode: STRING = "SDL_AUDIO_RESAMPLING_MODE"

	sdl_hint_audio_category: STRING = "SDL_AUDIO_CATEGORY"

	sdl_hint_render_batching: STRING = "SDL_RENDER_BATCHING"

	sdl_hint_event_logging: STRING = "SDL_EVENT_LOGGING"

	sdl_hint_wave_riff_chunk_size: STRING = "SDL_WAVE_RIFF_CHUNK_SIZE"

	sdl_hint_wave_truncation: STRING = "SDL_WAVE_TRUNCATION"

	sdl_hint_wave_fact_chunk: STRING = "SDL_WAVE_FACT_CHUNK"

	sdl_hint_display_usable_bounds: STRING = "SDL_DISPLAY_USABLE_BOUNDS"

	sdl_max_log_message: INTEGER_64 = 4096


-- The constant sdl_standard_gravity-- needs to be wrapped by hand
-- Check the definition at -- c:\\home\\test\\wrap_sdl2\\library\\c\\include\\sdl2\\SDL_sensor.h

	sdl_android_external_storage_read: INTEGER = 0x01

	sdl_android_external_storage_write: INTEGER = 0x02

	sdl_major_version: INTEGER_64 = 2

	sdl_minor_version: INTEGER_64 = 0

	sdl_patchlevel: INTEGER_64 = 12

feature {NONE} -- C externals

end
