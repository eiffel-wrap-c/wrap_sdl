note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class SDL_VIDEO_FUNCTIONS_API


feature -- Access

	sdl_get_window_pixel_format (window: SDL_WINDOW_STRUCT_API): NATURAL 
		do
			Result := c_sdl_get_window_pixel_format (window.item)
		ensure
			instance_free: class
		end

	sdl_create_window (title: POINTER; x: INTEGER; y: INTEGER; w: INTEGER; h: INTEGER; flags: NATURAL): POINTER
		external
			"C inline use <SDL.h>"
		alias
			"[
				return SDL_CreateWindow ((char const*)$title, (int)$x, (int)$y, (int)$w, (int)$h, (Uint32)$flags);
			]"
		end

	sdl_get_window_surface (window: SDL_WINDOW_STRUCT_API): detachable SDL_SURFACE_STRUCT_API 
		do
			if attached c_sdl_get_window_surface (window.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	sdl_update_window_surface (window: SDL_WINDOW_STRUCT_API): INTEGER 
		do
			Result := c_sdl_update_window_surface (window.item)
		ensure
			instance_free: class
		end

	sdl_destroy_window (window: SDL_WINDOW_STRUCT_API) 
		do
			c_sdl_destroy_window (window.item)
		ensure
			instance_free: class
		end

feature -- Externals

	c_sdl_get_window_pixel_format (window: POINTER): NATURAL
		external
			"C inline use <SDL.h>"
		alias
			"[
				return SDL_GetWindowPixelFormat ((SDL_Window*)$window);
			]"
		end

	c_sdl_get_window_surface (window: POINTER): POINTER
		external
			"C inline use <SDL.h>"
		alias
			"[
				return SDL_GetWindowSurface ((SDL_Window*)$window);
			]"
		end

	c_sdl_update_window_surface (window: POINTER): INTEGER
		external
			"C inline use <SDL.h>"
		alias
			"[
				return SDL_UpdateWindowSurface ((SDL_Window*)$window);
			]"
		end

	c_sdl_destroy_window (window: POINTER)
		external
			"C inline use <SDL.h>"
		alias
			"[
				SDL_DestroyWindow ((SDL_Window*)$window);
			]"
		end

feature -- Externals Address

end
